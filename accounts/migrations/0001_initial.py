# Generated by Django 4.2.5 on 2024-10-27 14:38

import accounts.utilities.file_handlers
import accounts.utilities.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address_one', models.CharField(blank=True, max_length=300, null=True)),
                ('address_two', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=300, null=True)),
                ('province', models.CharField(blank=True, choices=[('kzn', 'KwaZulu-Natal'), ('mp', 'Mpumalanga'), ('nw', 'North-West'), ('fs', 'Free-State'), ('wc', 'Western Cape'), ('lp', 'Limpopo'), ('gp', 'Gauteng'), ('ec', 'Eastern Cape'), ('nc', 'Northern Cape')], max_length=300, null=True)),
                ('country', models.CharField(default='South Africa', max_length=300)),
                ('zipcode', models.BigIntegerField(blank=True, null=True)),
                ('address_id', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, help_text='Enter cellphone number', max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator('^(\\+27|0)[1-9][0-9]{8}$', 'RSA phone number is required')])),
                ('facebook', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_fcbk_link])),
                ('twitter', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_twitter_link])),
                ('instagram', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_insta_link])),
                ('linkedIn', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_in_link])),
                ('profile_image', models.ImageField(blank=True, help_text='Upload profile image', null=True, upload_to=accounts.utilities.file_handlers.handle_profile_upload)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Dr', 'Dr'), ('Prof', 'Prof.')], max_length=30)),
                ('maiden_name', models.CharField(blank=True, help_text='Enter your maiden name', max_length=300, null=True)),
                ('biography', models.TextField(blank=True)),
                ('is_technical', models.BooleanField(default=False)),
                ('is_email_activated', models.BooleanField(default=False)),
                ('is_paid', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('NOT PAID', 'Not paid'), ('CANCELLED', 'Cancelled')], default='NOT PAID', max_length=40)),
                ('subscription_starts', models.DateTimeField(blank=True, null=True)),
                ('subscription_ends', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['-created'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutCompany',
            fields=[
                ('address_one', models.CharField(blank=True, max_length=300, null=True)),
                ('address_two', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=300, null=True)),
                ('province', models.CharField(blank=True, choices=[('kzn', 'KwaZulu-Natal'), ('mp', 'Mpumalanga'), ('nw', 'North-West'), ('fs', 'Free-State'), ('wc', 'Western Cape'), ('lp', 'Limpopo'), ('gp', 'Gauteng'), ('ec', 'Eastern Cape'), ('nc', 'Northern Cape')], max_length=300, null=True)),
                ('country', models.CharField(default='South Africa', max_length=300)),
                ('zipcode', models.BigIntegerField(blank=True, null=True)),
                ('address_id', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, help_text='Enter cellphone number', max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator('^(\\+27|0)[1-9][0-9]{8}$', 'RSA phone number is required')])),
                ('facebook', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_fcbk_link])),
                ('twitter', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_twitter_link])),
                ('instagram', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_insta_link])),
                ('linkedIn', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_in_link])),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True, unique=True)),
                ('slogan', models.CharField(blank=True, max_length=300, null=True, unique=True)),
                ('slug', models.SlugField(default='about-bbgi-model', max_length=300, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('small_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'About Company',
                'verbose_name_plural': 'About Companys',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPackage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Enter subscription package title', max_length=250)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Enter package price', max_digits=1000)),
                ('details', models.TextField(help_text='Enter package details')),
                ('max_businesses', models.IntegerField(default=1)),
                ('max_services_per_business', models.IntegerField(default=5)),
                ('max_products_per_business', models.IntegerField(default=5)),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='WalletModel',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000)),
                ('status', models.CharField(choices=[('No status', 'No status'), ('Requested Payout Details', 'Requested Payout Details'), ('Verifying Payout Details', 'Verifying Payout Details'), ('Approved Payout', 'Approved Payout'), ('Payout Declined', 'Payout Declined')], default=('No status', 'No status'), max_length=150)),
                ('cleared_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='my_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionOrder',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('payment_method_type', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_method_card_holder', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_method_masked_card', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_method_scheme', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_date', models.CharField(blank=True, max_length=50, null=True)),
                ('order_id', models.CharField(editable=False, max_length=150, unique=True)),
                ('client_first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('client_last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('client_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^(\\+27|0)[1-9][0-9]{8}$', 'RSA phone number is required')])),
                ('client_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('client_address_one', models.CharField(blank=True, max_length=300, null=True)),
                ('client_address_two', models.CharField(blank=True, max_length=300, null=True)),
                ('client_city', models.CharField(blank=True, max_length=300, null=True)),
                ('client_province', models.CharField(blank=True, max_length=300, null=True)),
                ('client_country', models.CharField(default='South Africa', max_length=300)),
                ('client_zipcode', models.BigIntegerField(blank=True, null=True)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=1000)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=1000)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000)),
                ('checkout_id', models.CharField(blank=True, db_index=True, max_length=200, null=True, unique=True)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('NOT PAID', 'Not paid'), ('CANCELLED', 'Cancelled')], default='NOT PAID', max_length=40)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription_orders', to='accounts.subscriptionpackage')),
                ('subscriber', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription_order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription Order',
                'verbose_name_plural': 'Subscription Orders',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='account',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscribers', to='accounts.subscriptionpackage'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
