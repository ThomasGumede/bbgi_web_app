# Generated by Django 4.2.5 on 2025-01-01 01:00

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import events.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='eventmodel',
            name='event_enddate',
            field=models.DateTimeField(validators=[django.core.validators.MinValueValidator(datetime.datetime(2025, 1, 1, 1, 0, 32, 770250, tzinfo=datetime.timezone.utc), 'Event end date and time cannot be in the past')]),
        ),
        migrations.AlterField(
            model_name='eventmodel',
            name='event_startdate',
            field=models.DateTimeField(validators=[django.core.validators.MinValueValidator(datetime.datetime(2025, 1, 1, 1, 0, 32, 770227, tzinfo=datetime.timezone.utc), 'Event start date and time cannot be in the past')]),
        ),
        migrations.AlterField(
            model_name='eventtickettypemodel',
            name='sale_end',
            field=models.DateTimeField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.datetime(2025, 1, 1, 1, 0, 32, 773353, tzinfo=datetime.timezone.utc), 'Ticket sale end date and time cannot be in the past')]),
        ),
        migrations.AlterField(
            model_name='eventtickettypemodel',
            name='sale_start',
            field=models.DateTimeField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.datetime(2025, 1, 1, 1, 0, 32, 773330, tzinfo=datetime.timezone.utc), 'Ticket sale start date and time cannot be in the past')]),
        ),
        migrations.CreateModel(
            name='EventReview',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('rating_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('commenter_email', models.EmailField(max_length=254)),
                ('commenter_full_names', models.CharField(max_length=300)),
                ('comment_title', models.CharField(max_length=300)),
                ('comment', models.TextField()),
                ('commenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_reviews', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='events.eventmodel')),
            ],
            options={
                'verbose_name': 'Ecent Review',
                'verbose_name_plural': 'Ecent Reviews',
            },
        ),
        migrations.CreateModel(
            name='EventContent',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(help_text='Upload emages images.', upload_to=events.models.handle_event_file_upload)),
                ('some_field', models.CharField(blank=True, max_length=20, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='events.eventmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
